#-----------------
#Provision instances
#-----------------
- hosts: localhost
  connection: local
  gather_facts: False

  vars:
    region: us-east-2
    image: ami-07efac79022b86107

  tasks:
   #Create SSH key pair
    - name: create key pair
      ec2_key:
        name: aws-key
        region: us-east-2
      register: ec2_key_result

    - name: Save private key
      copy: content="{{ ec2_key_result.key.private_key }}" dest="~/.ssh/id_rsa" mode=0600
      when: ec2_key_result.changed

    #Create Security Groups
    - name: Ensure security group exists for Builer node
      ec2_group:
        name: ProdAppSecurityGroup
        description: Security group for Java App Prod node with ports 22,80,8080 enabled
        region: "{{region}}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 8080
            to_port: 8080
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0

    #Provision AWS instance
    - name: Ensure a production node is provisioned
      ec2:
        key_name: aws-key
        instance_type: t2.micro
        image: "{{ image }}"
        wait: yes
        id: awsProdInstance18
        region: "{{ region }}"
        group: ProdAppSecurityGroup
        count: 1
      register: awsProduction

    #Get AWS instance Public IPs and Add to Ansible Hosts
    - name: Add public IP of awsProduction
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: awsProduction
      loop: "{{ awsProduction.instances }}"

    #Wait until instances start
    - name: Wait for SSH to come up
      wait_for:
        host: "{{ item.public_dns_name }}"
        port: 22
        delay: 60
        timeout: 320
        state: started
      with_items: "{{ awsProduction.instances }}"

#-----------------
#Install packages
#-----------------
- name: Configure EC2 instance
  hosts: awsProduction
  remote_user: ubuntu
  become: yes
  become_user: root
  gather_facts: False

  #Install packages
  tasks:
    - name: Ensure nginx is installed
      apt:
        name: nginx
        state: present
        update_cache: yes
